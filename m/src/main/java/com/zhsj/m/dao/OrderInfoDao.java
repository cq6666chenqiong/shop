package com.zhsj.m.dao;

import com.zhsj.m.model.OrderInfo;
import com.zhsj.m.util.db.DS;
import com.zhsj.m.util.db.DynamicDataSource;
import com.zhsj.m.vo.OrderInfoVO;

import java.math.BigDecimal;
import java.sql.SQLException;
import java.util.List;

import org.springframework.stereotype.Component;

@Component
@DynamicDataSource(DS.DB_MANAGER)
public interface OrderInfoDao {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_order
     *
     * @mbggenerated Sun Oct 29 12:06:32 CST 2017
     */
    public int deleteByPrimaryKey(Long id)  throws SQLException;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_order
     *
     * @mbggenerated Sun Oct 29 12:06:32 CST 2017
     */
    public int insert(OrderInfo record)  throws SQLException;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_order
     *
     * @mbggenerated Sun Oct 29 12:06:32 CST 2017
     */
    public int insertSelective(OrderInfo record)  throws SQLException;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_order
     *
     * @mbggenerated Sun Oct 29 12:06:32 CST 2017
     */
    public OrderInfo selectByPrimaryKey(Long id)  throws SQLException;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_order
     *
     * @mbggenerated Sun Oct 29 12:06:32 CST 2017
     */
    public int updateByPrimaryKeySelective(OrderInfo record)  throws SQLException;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_order
     *
     * @mbggenerated Sun Oct 29 12:06:32 CST 2017
     */
    public int updateByPrimaryKey(OrderInfo record)  throws SQLException;

    public int getOrderCount(OrderInfoVO orderInfo)  throws SQLException;

    public BigDecimal getPerAveOrderMoney(OrderInfoVO orderInfo)  throws SQLException;

    public BigDecimal getComparedMoneyProportion(OrderInfoVO orderInfo)  throws SQLException;

    public BigDecimal getComparedOrderCountProportion(OrderInfoVO orderInfo)  throws SQLException;

    public BigDecimal getComparedPerPriceProportion(OrderInfoVO orderInfo)  throws SQLException;

    public BigDecimal getOrderNetInComeProportion(OrderInfoVO orderInfo)  throws SQLException;

    public List<OrderInfoVO> getOrderList(OrderInfoVO orderInfo)  throws SQLException;

    public List<OrderInfoVO> getOrderListForExcel(OrderInfoVO orderInfo)  throws SQLException;

	public BigDecimal getOrderSumInCome(OrderInfoVO orderInfo)  throws SQLException;

	public BigDecimal getOrderSumDiscountTradeMoney(OrderInfoVO orderInfo)  throws SQLException;

	public BigDecimal getOrderRealSumTradeMoney(OrderInfoVO orderInfo)  throws SQLException;

	public BigDecimal getOrderSumNetInCome(OrderInfoVO orderInfo)  throws SQLException;


}